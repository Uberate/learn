<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on Learn / Ub(s)erate</title>
    <link>https://uberate.github.io/learn/categories/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on Learn / Ub(s)erate</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>© 2025 ub(s)erate</copyright>
    <lastBuildDate>Thu, 10 Jul 2025 22:16:21 +0800</lastBuildDate><atom:link href="https://uberate.github.io/learn/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Counter_type</title>
      <link>https://uberate.github.io/learn/posts/tech/observability/counter_type/</link>
      <pubDate>Thu, 10 Jul 2025 22:16:21 +0800</pubDate>
      
      <guid>https://uberate.github.io/learn/posts/tech/observability/counter_type/</guid>
      <description>&lt;p&gt;今天看到一篇关于 Counter 是否是设计失误的文章，
引发了一些思考。
所以想深入了解一下，&lt;/p&gt;
&lt;p&gt;Counter 用途、定义和目标。
然后再看看到底有什么问题。&lt;/p&gt;

&lt;h2 class=&#34;relative group&#34;&gt;什么是 Counter 类型 
    &lt;div id=&#34;什么是-counter-类型&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af-counter-%e7%b1%bb%e5%9e%8b&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Counter&lt;/code&gt; 是观测指标中一种非常常见的数据类型。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Counter&lt;/code&gt; 是一种单调递增的指标类型，
通常用于记录某个事件发生的总次数。
他的值只能增加，
不能减少，
除非发生了重置（或溢出）。&lt;/p&gt;
&lt;p&gt;这里有一个非常关键的点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Counter 是一个单调递增的数据类型，所以再没有发生溢出的情况下，Counter 不应该出现重置。&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2 class=&#34;relative group&#34;&gt;用途 
    &lt;div id=&#34;用途&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e7%94%a8%e9%80%94&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;

&lt;h3 class=&#34;relative group&#34;&gt;1. 速率类的运算 
    &lt;div id=&#34;1-速率类的运算&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#1-%e9%80%9f%e7%8e%87%e7%b1%bb%e7%9a%84%e8%bf%90%e7%ae%97&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;Counter 本身的计算目标再实际生产中，
都是用来计算 &lt;code&gt;QPS&lt;/code&gt;，&lt;code&gt;OPS&lt;/code&gt;，&lt;code&gt;EPS&lt;/code&gt; 的。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Linux 中获取 CPU 和内存的使用情况</title>
      <link>https://uberate.github.io/learn/posts/ln/bash/get_cpu_mem_usage/</link>
      <pubDate>Sun, 29 Jun 2025 23:08:43 +0800</pubDate>
      
      <guid>https://uberate.github.io/learn/posts/ln/bash/get_cpu_mem_usage/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# CPU 利用率&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps -p &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PID&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; -o %cpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 内存&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps -p &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PID&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; -o rss
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>Bash boom(Bash 炸弹)</title>
      <link>https://uberate.github.io/learn/posts/ln/bash/bash_boom/</link>
      <pubDate>Tue, 24 Jun 2025 22:57:57 +0800</pubDate>
      
      <guid>https://uberate.github.io/learn/posts/ln/bash/bash_boom/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Bash 炸弹 
    &lt;div id=&#34;bash-炸弹&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#bash-%e7%82%b8%e5%bc%b9&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;

  
  
  
  



&lt;div
  
    class=&#34;flex px-4 py-3 rounded-md&#34;
    style=&#34;background-color: #e63946&#34;
  &gt;

  &lt;span
    
      class=&#34;ltr:pr-3 rtl:pl-3 flex items-center&#34;
      style=&#34;color: #1d3557&#34;
    &gt;

    

  &lt;span class=&#34;relative block icon&#34;&gt;
    &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 448 512&#34;&gt;
&lt;path fill=&#34;currentColor&#34;  d=&#34;M159.3 5.4c7.8-7.3 19.9-7.2 27.7 .1c27.6 25.9 53.5 53.8 77.7 84c11-14.4 23.5-30.1 37-42.9c7.9-7.4 20.1-7.4 28 .1c34.6 33 63.9 76.6 84.5 118c20.3 40.8 33.8 82.5 33.8 111.9C448 404.2 348.2 512 224 512C98.4 512 0 404.1 0 276.5c0-38.4 17.8-85.3 45.4-131.7C73.3 97.7 112.7 48.6 159.3 5.4zM225.7 416c25.3 0 47.7-7 68.8-21c42.1-29.4 53.4-88.2 28.1-134.4c-2.8-5.6-5.6-11.2-9.8-16.8l-50.6 58.8s-81.4-103.6-87.1-110.6C133.1 243.8 112 273.2 112 306.8C112 375.4 162.6 416 225.7 416z&#34;/&gt;&lt;/svg&gt;
  &lt;/span&gt;


  &lt;/span&gt;

  &lt;span
    
      style=&#34;color: #f1faee&#34;
    &gt;注意：本篇文章中的指令可能会导致服务器受损。请勿在生产环境中执行。&lt;/span&gt;
&lt;/div&gt;

&lt;p&gt;请看如下一行指令:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>MCP 资源</title>
      <link>https://uberate.github.io/learn/posts/tech/ai/mcp/mcp_resources/</link>
      <pubDate>Tue, 10 Jun 2025 23:17:14 +0800</pubDate>
      
      <guid>https://uberate.github.io/learn/posts/tech/ai/mcp/mcp_resources/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;学习 
    &lt;div id=&#34;学习&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%ad%a6%e4%b9%a0&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;不止 MCP ，还有一些其他乱七八糟的学习。&lt;/p&gt;&lt;/blockquote&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;说明&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;链接&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;官方资料&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/27327515233&#34; target=&#34;_blank&#34;&gt;Model Context Protocol&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;Github Microsoft MCP 学习书，非常详细，非常适合初学者&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://github.com/microsoft/mcp-for-beginners&#34; target=&#34;_blank&#34;&gt;Github：microsoft/mcp-for-beginners&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;知乎：一文看懂：MCP（大模型上下文协议）&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/27327515233&#34; target=&#34;_blank&#34;&gt;知乎：一文看懂：MCP（大模型上下文协议）&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;知乎：从0到1掌握 MCP：微软 AI 标准化协议学习指南深度解读&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/1914634098984615970&#34; target=&#34;_blank&#34;&gt;知乎：从0到1掌握 MCP：微软 AI 标准化协议学习指南深度解读&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;大模型学习指南，适合中国宝宝&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;(&lt;a href=&#34;https://github.com/datawhalechina/self-llm%29%28https://github.com/datawhalechina/self-llm&#34; target=&#34;_blank&#34;&gt;https://github.com/datawhalechina/self-llm)(https://github.com/datawhalechina/self-llm&lt;/a&gt;)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 class=&#34;relative group&#34;&gt;MCP 大全 
    &lt;div id=&#34;mcp-大全&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#mcp-%e5%a4%a7%e5%85%a8&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;| MCP 资源库 | &lt;a href=&#34;mcp.so&#34;&gt;mcp.so&lt;/a&gt; |
| 社区按类型整理的 MCP 服务 | &lt;a href=&#34;https://github.com/yzfly/Awesome-MCP-ZH&#34; target=&#34;_blank&#34;&gt;https://github.com/yzfly/Awesome-MCP-ZH&lt;/a&gt; |&lt;/p&gt;

&lt;h2 class=&#34;relative group&#34;&gt;AI 相关 
    &lt;div id=&#34;ai-相关&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#ai-%e7%9b%b8%e5%85%b3&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;

&lt;h3 class=&#34;relative group&#34;&gt;测试 
    &lt;div id=&#34;测试&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%b5%8b%e8%af%95&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;说明&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;链接&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;LLM 测试框架&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;a href=&#34;https://www.readme-i18n.com/confident-ai/deepeval&#34; target=&#34;_blank&#34;&gt;https://www.readme-i18n.com/confident-ai/deepeval&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
      
    </item>
    
    <item>
      <title>学习 MCP - 本地 Server Demo</title>
      <link>https://uberate.github.io/learn/posts/tech/ai/mcp/local_server_demo/</link>
      <pubDate>Wed, 04 Jun 2025 22:39:13 +0800</pubDate>
      
      <guid>https://uberate.github.io/learn/posts/tech/ai/mcp/local_server_demo/</guid>
      <description>&lt;p&gt;这篇文章将带你创建一个简单的 MCP Local Server 服务。&lt;/p&gt;
&lt;p&gt;代码已经放到我的 Github 仓库里面了：&lt;/p&gt;
&lt;div class=&#34;github-card-wrapper&#34;&gt;&lt;a id=&#34;github-bf53c00e3cd771b191af44424dd43242&#34; target=&#34;_blank&#34; href=&#34;https://github.com/Uberate/lear-mcp&#34; class=&#34;cursor-pointer&#34;&gt;



    &lt;div
      class=&#34;w-full md:w-auto p-0 m-0 border border-neutral-200 dark:border-neutral-700 border rounded-md shadow-2xl&#34;&gt;&lt;div class=&#34;w-full nozoom&#34;&gt;
        &lt;img src=&#34;https://opengraph.githubassets.com/0/Uberate/lear-mcp&#34; alt=&#34;GitHub Repository Thumbnail&#34;
          class=&#34;nozoom mt-0 mb-0 w-full h-full object-cover&#34;&gt;
      &lt;/div&gt;&lt;div
        class=&#34;w-full md:w-auto pt-3 p-5&#34;&gt;

        &lt;div class=&#34;flex items-center&#34;&gt;
          &lt;span class=&#34;text-2xl text-neutral-800 dark:text-neutral&#34; style=&#34;margin-right:10px;&#34;&gt;
            

  &lt;span class=&#34;relative block icon&#34;&gt;
    &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 496 512&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z&#34;/&gt;&lt;/svg&gt;

  &lt;/span&gt;


          &lt;/span&gt;
          &lt;div id=&#34;github-bf53c00e3cd771b191af44424dd43242-full_name&#34;
            class=&#34;m-0 font-bold text-xl text-neutral-800 decoration-primary-500 hover:underline hover:underline-offset-2 dark:text-neutral&#34;&gt;
            Uberate/lear-mcp
          &lt;/div&gt;
        &lt;/div&gt;

        &lt;p id=&#34;github-bf53c00e3cd771b191af44424dd43242-description&#34; class=&#34;m-0 mt-2 text-md text-neutral-800 dark:text-neutral&#34;&gt;
          
        &lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>容器网络 - IpTables</title>
      <link>https://uberate.github.io/learn/posts/tech/network/container_network_iptables/</link>
      <pubDate>Tue, 03 Jun 2025 23:13:49 +0800</pubDate>
      
      <guid>https://uberate.github.io/learn/posts/tech/network/container_network_iptables/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;IpTables - Linux 中的强力防火墙 
    &lt;div id=&#34;iptables---linux-中的强力防火墙&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#iptables---linux-%e4%b8%ad%e7%9a%84%e5%bc%ba%e5%8a%9b%e9%98%b2%e7%81%ab%e5%a2%99&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;IpTables&lt;/code&gt; 是一个 &lt;code&gt;NetFilter&lt;/code&gt; 的用户态应用程序。&lt;/p&gt;
&lt;p&gt;主要面向系统管理员的 Linux 内核防火墙。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;是的，&lt;code&gt;IpTables&lt;/code&gt; 实际是一个防火墙，而不是路由器。&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2 class=&#34;relative group&#34;&gt;容器时代的机遇 
    &lt;div id=&#34;容器时代的机遇&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%ae%b9%e5%99%a8%e6%97%b6%e4%bb%a3%e7%9a%84%e6%9c%ba%e9%81%87&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;订书器也没有想到有一天他订装的不是精神粮食，而是真的粮食。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;除网络隔离之外，IpTables 还提供了流量隔离、管理的能力。&lt;/p&gt;

&lt;h2 class=&#34;relative group&#34;&gt;IpTables 的 Table(表) 
    &lt;div id=&#34;iptables-的-table表&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#iptables-%e7%9a%84-table%e8%a1%a8&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;容器时代更加常见使用的是 &lt;code&gt;NAT&lt;/code&gt; 表，比如 &lt;code&gt;Docker&lt;/code&gt; 将服务暴露到主机服务上，实际上就是通过 &lt;code&gt;IpTables&lt;/code&gt; 实现的。
如果在启动 &lt;code&gt;Docker&lt;/code&gt; 添加启动参数 &lt;code&gt;--iptables=false&lt;/code&gt;, &lt;code&gt;Docker&lt;/code&gt; 就无法通过 &lt;code&gt;IpTables&lt;/code&gt; 将服务暴露在主机上。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>网络基础</title>
      <link>https://uberate.github.io/learn/posts/tech/network/base/</link>
      <pubDate>Tue, 03 Jun 2025 22:38:02 +0800</pubDate>
      
      <guid>https://uberate.github.io/learn/posts/tech/network/base/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;网络基础 
    &lt;div id=&#34;网络基础&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e7%bd%91%e7%bb%9c%e5%9f%ba%e7%a1%80&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;计算机时代，不论是什么原因，我们都应该了解熟悉网络相关知识。&lt;/p&gt;

&lt;h2 class=&#34;relative group&#34;&gt;网络 7 层标准模型 
    &lt;div id=&#34;网络-7-层标准模型&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e7%bd%91%e7%bb%9c-7-%e5%b1%82%e6%a0%87%e5%87%86%e6%a8%a1%e5%9e%8b&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;自上而下&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;#&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;名&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;常见协议&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;应用层(Application Layer)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;HTTP&lt;/code&gt; &lt;/br&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/br&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/br&gt; &lt;code&gt;DNS&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;直接为用户的应用程序提供服务。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;表示层(Presentation Layer)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;负责数据的表示、加密、解密和压缩，如数据格式转换、加密解密、字符集转换等。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;3&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;会化层(Session Layer)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;管理会话，建立、管理和终止会话连接，如登录验证、会话恢复等。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;4&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;传输层(Transport Layer)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;TCP&lt;/code&gt; &lt;/br&gt; &lt;code&gt;UDP&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;提供端到端的可靠传输和流量控制。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;5&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;网络层(Network Layer)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;负责数据包的路由和转发，实现不同网络之间的通信。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;数据链路层(Data Link Layer)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;负责在同一网络内的数据帧传输和差错检测。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;7&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;物理层 (Physical Layer)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;负责比特流的传输，定义物理设备的电气、机械、过程和功能规范，如网线、光纤、集线器等。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
      
    </item>
    
    <item>
      <title>GO Channel 的空值特性</title>
      <link>https://uberate.github.io/learn/posts/ln/go/channel/</link>
      <pubDate>Mon, 02 Jun 2025 19:10:41 +0800</pubDate>
      
      <guid>https://uberate.github.io/learn/posts/ln/go/channel/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;Golang Channel nil 
    &lt;div id=&#34;golang-channel-nil&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#golang-channel-nil&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Channel 在空值的时候会有特殊的行为。&lt;/p&gt;
&lt;p&gt;与大多数的数据类型不同，Channel 在 &lt;code&gt;nil&lt;/code&gt; 的情况下进行读写会发生线程阻塞，而不是空指针异常。&lt;/p&gt;

&lt;h2 class=&#34;relative group&#34;&gt;ReadNil 
    &lt;div id=&#34;readnil&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#readnil&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;





















&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nilCh&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;chan&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;{} = &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nilCh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// STDOUT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// fatal error: all goroutines are asleep - deadlock!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// goroutine 1 [chan receive (nil chan)]:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// main.main()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//         /learn/codes/go/channel/readnil/read_nil_channel.go:5 +0x24&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// exit status 2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;h2 class=&#34;relative group&#34;&gt;WriteNil 
    &lt;div id=&#34;writenil&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#writenil&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;





















&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nilCh&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;chan&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;{} = &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;nilCh&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;{}{}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// STDOUT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// fatal error: all goroutines are asleep - deadlock!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// goroutine 1 [chan send (nil chan)]:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// main.main()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//         /Users/uberate/workspace/learn/codes/go/channel/writenil/write_nil_channel.go:5 +0x24&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// exit status 2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;p&gt;执行上述两个代码我们发现了一个现象，&lt;code&gt;nil&lt;/code&gt; 状态下的 Channel 是无法读写的，会一直阻塞。&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
