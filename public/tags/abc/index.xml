<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Abc on Learn / Ub(s)erate</title>
    <link>http://localhost:1313/learn/tags/abc/</link>
    <description>Recent content in Abc on Learn / Ub(s)erate</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>© 2025 ub(s)erate</copyright>
    <lastBuildDate>Sat, 07 Jun 2025 01:28:17 +0800</lastBuildDate><atom:link href="http://localhost:1313/learn/tags/abc/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Abc 记谱法</title>
      <link>http://localhost:1313/learn/posts/music/staff/abc/</link>
      <pubDate>Sat, 07 Jun 2025 01:28:17 +0800</pubDate>
      
      <guid>http://localhost:1313/learn/posts/music/staff/abc/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;头信息 
    &lt;div id=&#34;头信息&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%a4%b4%e4%bf%a1%e6%81%af&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-abc&#34; data-lang=&#34;abc&#34;&gt;X: 文件标号
T: 标题
M: 节拍 2/4
L: 谱号编辑音长单位 1/8
C: 作者
N: 备注 Ub(s)erate ABC
K: 调号 C
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 class=&#34;relative group&#34;&gt;ABC 内容 
    &lt;div id=&#34;abc-内容&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#abc-%e5%86%85%e5%ae%b9&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;




&lt;script src=&#34;http://localhost:1313/learn/js/abcjs-basic-min.js&#34; defer&gt;&lt;/script&gt;





&lt;style&gt;
    main {
        width: 50vw;
        margin: 0 auto;
    }
    #paper-0 {
        width: 100%;
    }
    .abcjs-container {
        width: 100% !important;
    }
    .row {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
    }
    .status {
        padding: 2px 10px 10px 10px;
        background-color: #f0f0f0;
        width:250px;
    }
    .start, .stop {
        background-color: #4CAF50;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        margin: 10px 5px;
        transition: background-color 0.3s ease;
    }
    .stop {
        background-color: #f44336;
    }
    .start:hover {
        background-color: #45a049;
    }
    .stop:hover {
        background-color: #da190b;
    }
    .start:active, .stop:active {
        transform: scale(0.98);
    }
    @media (prefers-color-scheme: dark) {
        .status {
            background-color: gray;
        }
        .start, .stop {
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }
    }
&lt;/style&gt;

&lt;div style=&#34;width: 100%;&#34;&gt;
    &lt;details&gt;
        &lt;summary&gt;查看 ABC 记谱源码&lt;/summary&gt;
        &lt;pre&gt;&lt;code&gt;
M: 2/4
L: 1/4
K: C
CDEF|GABc|defg|abc&#39;d&#39;|e&#39;f&#39;g&#39;a&#39;|b&#39;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/details&gt;
    &lt;main&gt;
      &lt;button class=&#34;start&#34; style=&#34;background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; margin: 10px 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);&#34;&gt;开始播放&lt;/button&gt;
      &lt;button class=&#34;stop&#34; style=&#34;display: none; background-color: #f44336; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; margin: 10px 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);&#34;&gt;停止播放&lt;/button&gt;
      &lt;div id=&#34;paper-0&#34;&gt;&lt;/div&gt;
      &lt;div id=&#34;audio&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;status&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;suspend-explanation&#34;&gt;点击开始播放按钮开始播放&lt;/div&gt;
      &lt;div class=&#34;audio-error&#34; style=&#34;display: none;&#34;&gt;此浏览器不支持音频播放&lt;/div&gt;
    &lt;/main&gt;
&lt;/div&gt;

&lt;script &gt;
    var abc = `\nM: 2\/4\nL: 1\/4\nK: C\nCDEF|GABc|defg|abc\u0027d\u0027|e\u0027f\u0027g\u0027a\u0027|b\u0027\n`;

    addEventListener(&#34;DOMContentLoaded&#34;, function() {
        function updateScale() {
            var container = document.querySelector(&#39;main&#39;);
            var containerWidth = container.offsetWidth;
            var scale = containerWidth / 700; 
            return Math.min(Math.max(scale, 0.8), 2.0); 
        }

        
        var visualObj = ABCJS.renderAbc(&#34;paper-0&#34;, abc, {
            responsive: &#34;resize&#34;,
            scale: updateScale()
        })[0];

        
        window.addEventListener(&#39;resize&#39;, function() {
            ABCJS.renderAbc(&#34;paper-0&#34;, abc, {
                responsive: &#34;resize&#34;,
                scale: updateScale()
            });
        });

        
        
        var midiBuffer;

        var startAudioButton = document.querySelector(&#34;.start&#34;);
        var stopAudioButton = document.querySelector(&#34;.stop&#34;);
        var explanationDiv = document.querySelector(&#34;.suspend-explanation&#34;);
        var statusDiv = document.querySelector(&#34;.status&#34;);

        startAudioButton.addEventListener(&#34;click&#34;, function() {
            startAudioButton.setAttribute(&#34;style&#34;, &#34;display:none;&#34;);
            explanationDiv.setAttribute(&#34;style&#34;, &#34;opacity: 0;&#34;);
            statusDiv.innerHTML = &#34;&lt;div&gt;测试浏览器&lt;/div&gt;&#34;;
            if (ABCJS.synth.supportsAudio()) {
                stopAudioButton.setAttribute(&#34;style&#34;, &#34;&#34;);

                
                
                
                
                window.AudioContext = window.AudioContext ||
                    window.webkitAudioContext ||
                    navigator.mozAudioContext ||
                    navigator.msAudioContext;
                var audioContext = new window.AudioContext();
                audioContext.resume().then(function () {
                    

                    
                    midiBuffer = new ABCJS.synth.CreateSynth();

                    
                    return midiBuffer.init({
                        visualObj: visualObj,
                        audioContext: audioContext,
                        millisecondsPerMeasure: visualObj.millisecondsPerMeasure(),
                        sequence: [],
                        options: {
                            soundFontUrl: &#34;https://paulrosen.github.io/midi-js-soundfonts/abcjs/&#34;,
                            program: 0,
                            midiTranspose: 0,
                            fadeLength: 0,
                            defaultQpm: 120,
                            chordsOff: false,
                            voicesOff: false,
                            drum: &#34;&#34;,
                            swing: {
                                beats: 0,
                                value: 0
                            }
                        }
                    }).then(function (response) {
                        console.log(&#34;Notes loaded: &#34;, response)
                        statusDiv.innerHTML += &#34;&lt;div&gt;音频对象初始化&lt;/div&gt;&#34;;
                        
                        
                        return midiBuffer.prime();
                    }).then(function (response) {
                        statusDiv.innerHTML += &#34;&lt;div&gt;状态 = &#34; + response.status + &#34;&lt;/div&gt;&#34;
                        
                        midiBuffer.start();
                        statusDiv.innerHTML += &#34;&lt;div&gt;音频开始&lt;/div&gt;&#34;;
                        return Promise.resolve();
                    }).catch(function (error) {
                        if (error.status === &#34;NotSupported&#34;) {
                            stopAudioButton.setAttribute(&#34;style&#34;, &#34;display:none;&#34;);
                            var audioError = document.querySelector(&#34;.audio-error&#34;);
                            audioError.setAttribute(&#34;style&#34;, &#34;&#34;);
                        } else
                            console.warn(&#34;synth error&#34;, error);
                    });
                });
            } else {
                var audioError = document.querySelector(&#34;.audio-error&#34;);
                audioError.setAttribute(&#34;style&#34;, &#34;&#34;);
            }
        });

        stopAudioButton.addEventListener(&#34;click&#34;, function() {
            startAudioButton.setAttribute(&#34;style&#34;, &#34;&#34;);
            explanationDiv.setAttribute(&#34;style&#34;, &#34;&#34;);
            stopAudioButton.setAttribute(&#34;style&#34;, &#34;display:none;&#34;);
            if (midiBuffer)
                midiBuffer.stop();
        });
    })
&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;延音: &lt;code&gt;{音符 音长}&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;连音: &lt;code&gt;(start end)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 class=&#34;relative group&#34;&gt;ABC 高低音 
    &lt;div id=&#34;abc-高低音&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#abc-%e9%ab%98%e4%bd%8e%e9%9f%b3&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;




&lt;script src=&#34;http://localhost:1313/learn/js/abcjs-basic-min.js&#34; defer&gt;&lt;/script&gt;





&lt;style&gt;
    main {
        width: 50vw;
        margin: 0 auto;
    }
    #paper-1 {
        width: 100%;
    }
    .abcjs-container {
        width: 100% !important;
    }
    .row {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
    }
    .status {
        padding: 2px 10px 10px 10px;
        background-color: #f0f0f0;
        width:250px;
    }
    .start, .stop {
        background-color: #4CAF50;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        margin: 10px 5px;
        transition: background-color 0.3s ease;
    }
    .stop {
        background-color: #f44336;
    }
    .start:hover {
        background-color: #45a049;
    }
    .stop:hover {
        background-color: #da190b;
    }
    .start:active, .stop:active {
        transform: scale(0.98);
    }
    @media (prefers-color-scheme: dark) {
        .status {
            background-color: gray;
        }
        .start, .stop {
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }
    }
&lt;/style&gt;

&lt;div style=&#34;width: 100%;&#34;&gt;
    &lt;details&gt;
        &lt;summary&gt;查看 ABC 记谱源码&lt;/summary&gt;
        &lt;pre&gt;&lt;code&gt;
M: 2/4
L: 1/4
K: C
V:1 Program 1 0 %piano
V:2 Program 1 0 octave=-2 bass $piano
V:1
CDEF|GABc|defg|abc&#39;d&#39;|e&#39;f&#39;g&#39;a&#39;|b&#39;
V:2
CDEF|GABc|defg|abc&#39;d&#39;|e&#39;f&#39;g&#39;a&#39;|b&#39;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/details&gt;
    &lt;main&gt;
      &lt;button class=&#34;start&#34; style=&#34;background-color: #4CAF50; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; margin: 10px 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);&#34;&gt;开始播放&lt;/button&gt;
      &lt;button class=&#34;stop&#34; style=&#34;display: none; background-color: #f44336; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; margin: 10px 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);&#34;&gt;停止播放&lt;/button&gt;
      &lt;div id=&#34;paper-1&#34;&gt;&lt;/div&gt;
      &lt;div id=&#34;audio&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;status&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;suspend-explanation&#34;&gt;点击开始播放按钮开始播放&lt;/div&gt;
      &lt;div class=&#34;audio-error&#34; style=&#34;display: none;&#34;&gt;此浏览器不支持音频播放&lt;/div&gt;
    &lt;/main&gt;
&lt;/div&gt;

&lt;script &gt;
    var abc = `\nM: 2\/4\nL: 1\/4\nK: C\nV:1 Program 1 0 %piano\nV:2 Program 1 0 octave=-2 bass \u0024piano\nV:1\nCDEF|GABc|defg|abc\u0027d\u0027|e\u0027f\u0027g\u0027a\u0027|b\u0027\nV:2\nCDEF|GABc|defg|abc\u0027d\u0027|e\u0027f\u0027g\u0027a\u0027|b\u0027\n`;

    addEventListener(&#34;DOMContentLoaded&#34;, function() {
        function updateScale() {
            var container = document.querySelector(&#39;main&#39;);
            var containerWidth = container.offsetWidth;
            var scale = containerWidth / 700; 
            return Math.min(Math.max(scale, 0.8), 2.0); 
        }

        
        var visualObj = ABCJS.renderAbc(&#34;paper-1&#34;, abc, {
            responsive: &#34;resize&#34;,
            scale: updateScale()
        })[0];

        
        window.addEventListener(&#39;resize&#39;, function() {
            ABCJS.renderAbc(&#34;paper-1&#34;, abc, {
                responsive: &#34;resize&#34;,
                scale: updateScale()
            });
        });

        
        
        var midiBuffer;

        var startAudioButton = document.querySelector(&#34;.start&#34;);
        var stopAudioButton = document.querySelector(&#34;.stop&#34;);
        var explanationDiv = document.querySelector(&#34;.suspend-explanation&#34;);
        var statusDiv = document.querySelector(&#34;.status&#34;);

        startAudioButton.addEventListener(&#34;click&#34;, function() {
            startAudioButton.setAttribute(&#34;style&#34;, &#34;display:none;&#34;);
            explanationDiv.setAttribute(&#34;style&#34;, &#34;opacity: 0;&#34;);
            statusDiv.innerHTML = &#34;&lt;div&gt;测试浏览器&lt;/div&gt;&#34;;
            if (ABCJS.synth.supportsAudio()) {
                stopAudioButton.setAttribute(&#34;style&#34;, &#34;&#34;);

                
                
                
                
                window.AudioContext = window.AudioContext ||
                    window.webkitAudioContext ||
                    navigator.mozAudioContext ||
                    navigator.msAudioContext;
                var audioContext = new window.AudioContext();
                audioContext.resume().then(function () {
                    

                    
                    midiBuffer = new ABCJS.synth.CreateSynth();

                    
                    return midiBuffer.init({
                        visualObj: visualObj,
                        audioContext: audioContext,
                        millisecondsPerMeasure: visualObj.millisecondsPerMeasure(),
                        sequence: [],
                        options: {
                            soundFontUrl: &#34;https://paulrosen.github.io/midi-js-soundfonts/abcjs/&#34;,
                            program: 0,
                            midiTranspose: 0,
                            fadeLength: 0,
                            defaultQpm: 120,
                            chordsOff: false,
                            voicesOff: false,
                            drum: &#34;&#34;,
                            swing: {
                                beats: 0,
                                value: 0
                            }
                        }
                    }).then(function (response) {
                        console.log(&#34;Notes loaded: &#34;, response)
                        statusDiv.innerHTML += &#34;&lt;div&gt;音频对象初始化&lt;/div&gt;&#34;;
                        
                        
                        return midiBuffer.prime();
                    }).then(function (response) {
                        statusDiv.innerHTML += &#34;&lt;div&gt;状态 = &#34; + response.status + &#34;&lt;/div&gt;&#34;
                        
                        midiBuffer.start();
                        statusDiv.innerHTML += &#34;&lt;div&gt;音频开始&lt;/div&gt;&#34;;
                        return Promise.resolve();
                    }).catch(function (error) {
                        if (error.status === &#34;NotSupported&#34;) {
                            stopAudioButton.setAttribute(&#34;style&#34;, &#34;display:none;&#34;);
                            var audioError = document.querySelector(&#34;.audio-error&#34;);
                            audioError.setAttribute(&#34;style&#34;, &#34;&#34;);
                        } else
                            console.warn(&#34;synth error&#34;, error);
                    });
                });
            } else {
                var audioError = document.querySelector(&#34;.audio-error&#34;);
                audioError.setAttribute(&#34;style&#34;, &#34;&#34;);
            }
        });

        stopAudioButton.addEventListener(&#34;click&#34;, function() {
            startAudioButton.setAttribute(&#34;style&#34;, &#34;&#34;);
            explanationDiv.setAttribute(&#34;style&#34;, &#34;&#34;);
            stopAudioButton.setAttribute(&#34;style&#34;, &#34;display:none;&#34;);
            if (midiBuffer)
                midiBuffer.stop();
        });
    })
&lt;/script&gt;</description>
      
    </item>
    
  </channel>
</rss>
